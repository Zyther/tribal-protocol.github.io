window.SIDEBAR_ITEMS = {"enum":[["CallableKind","The kind of externally callable smart contract entity."],["ImplItem","An item within an ink! implementation block."],["InkItem","An ink! specific item."],["InkTraitItem","An ink! item within an ink! trait definition."],["Item","An item in the root of the ink! module (`ir::ItemMod`)."],["Receiver","The receiver of an ink! message."],["Visibility","The visibility of an ink! message or constructor."]],"fn":[["blake2b_256","Computes the BLAKE-2b 256-bit hash for the given input and stores it in output."]],"macro":[["format_err","Creates a [`syn::Error`] with the format message and infers the `Span` using `Spanned`."],["format_err_spanned","Creates a [`syn::Error`] with the format message and infers the `Span` using `ToTokens`."]],"mod":[["marker","Marker types and definitions."],["utils",""]],"struct":[["Blake2x256Macro","Computes the BLAKE2b-256 bit hash of a string or byte string literal."],["CallableWithSelector","Wrapper for a callable that adds its composed selector."],["ChainExtension","An ink! chain extension."],["ChainExtensionMethod","An ink! chain extension method."],["Config","The ink! configuration."],["Constructor","An ink! constructor definition."],["Contract","An ink! contract definition consisting of the ink! configuration and module."],["Event","An ink! event struct definition."],["ExtensionId","The unique ID of an ink! chain extension method."],["InkItemTrait","A checked ink! trait definition without its configuration."],["InkTest","The ink! test with all required information."],["InkTraitDefinition","A checked ink! trait definition without its configuration."],["InkTraitMessage","A checked ink! message of an ink! trait definition."],["InputsIter","Iterator over the input parameters of an ink! message or constructor."],["ItemImpl","An ink! implementation block."],["ItemMod","The ink! module."],["IterConstructors","Iterator yielding all ink! constructor within a source ink! `ir::ItemImpl`."],["IterEvents","Iterator yielding all ink! event definitions within the ink! `ItemMod`."],["IterInkTraitItems","Iterator over all the ink! trait items of an ink! trait definition."],["IterItemImpls","Iterator yielding all ink! implementation block definitions within the ink! `ItemMod`."],["IterMessages","Iterator yielding all ink! messages within a source ink! `ir::ItemImpl`."],["Message","An ink! message definition."],["Namespace","An ink! namespace applicable to a trait implementation block."],["Selector","The selector of an ink! dispatchable."],["SelectorMacro","The selector ID of an ink! dispatchable."],["Storage","An ink! storage struct definition."]],"trait":[["Callable","An ink! callable."],["HexLiteral","Used to convert literal values into their hex representations for code generation."],["IsDocAttribute","An extension trait for [`syn::Attribute`] in order to query for documentation."]]};